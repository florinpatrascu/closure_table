name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    env:
      MIX_ENV: test
      FORCE_COLOR: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: "1.15"
              otp: "26.2"
              postgres: "12.13-alpine"
          - pair:
              elixir: "1.17"
              otp: "26.2"
              postgres: "15.1-alpine"
          - pair:
              elixir: "1.18.1"
              otp: "27.2"
              postgres: "15.1-alpine"
            lint: lint

    runs-on: ubuntu-24.04

    services:
      pg:
        image: postgres:${{matrix.pair.postgres}}
        env:
          POSTGRES_DB: ct_ecto_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432
        volumes:
          - /var/run/postgresql:/var/run/postgresql

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}

      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{matrix.pair.elixir}}-${{matrix.pair.otp}}-${{ hashFiles('**/mix.lock') }}
      - run: mix deps.get

      - run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - run: mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - run: mix deps.compile

      - run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - run: mix test
        env:
          PGUSER: postgres
          PGPASSWORD: postgres
          PG_SOCKET_DIR: /var/run/postgresql
